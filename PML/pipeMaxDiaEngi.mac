!ce = !!ce

!allPipe = array()
!goodDeslnk = array()
!dbAllPipe = array()

var !tg coll all :tgobPipe with not badref(deslnk num 1) for /GRP_PIPE

do !eaTg values !tg

	!dbTg = !eaTg.dbref()

	!dbAllPipe.append(!dbTg)
	!allPipe.append(!dbTg.deslnk[1])

enddo

!pipeBore = array()

if !allPipe.size() eq 0 then
	$P no Pipe in CE
	Return
endif


do !dbPipe index !allPipe

	!bore = array()

	!eaDbPipe = !allPipe[!dbPipe]
	
	var !allComp coll all bran mem with type ne 'ATTA' and not badref(catref) for $!eaDbPipe
	var !allBran coll all bran for $!eaDbPipe
	
	var !hbor eval hbor for all from !allBran
	var !tbor eval tbor for all from !allBran
	
	!bore.appendarray(!hbor)
	!bore.appendarray(!tbor)
	
	var !abor eval abor for all from !allComp
	var !lbor eval lbor for all from !allComp
	
	!bore.appendarray(!lbor)
	!bore.appendarray(!lbor)
	
	!bore.unique()
	
	!maxAbor = 0
	
	do !eaAbor values !bore
		
		!eaAborVal = !eaAbor.real().value()
		handle any
			SKIP
		endhandle
			
		if !eaAborVal gt !maxAbor then
			!maxAbor = !eaAborVal
		endif
		
	enddo
	
	!name = !eaDbPipe.name
	
	!oldVal = !dbAllPipe[!dbPipe].:TgNominalDiameter
	
	!string = |'| & !name & ';' & !maxAbor & ';' & !oldVal
	
	!pipeBore.append(!string)
	
	!dbAllPipe[!dbPipe].:TgNominalDiameter = !maxAbor.string()
	handle any
		!mess = !!error.text
		$P $!mess
	endhandle
	
enddo

var !proj proj code

!header = 'Pipe;maxBore;oldBore'

!path = |%pdmsUser%/$!proj| & |_pipeBore.csv|

!file = object file(!path)

$(
if not !file.exists() then

	!file.open('WRITE')

	!file.writerecord(!header)

endif
$)

!outArr = array()
!outArr.append(!header)
!outArr.appendArray(!pipeBore)
	
!file.writefile('OVERWRITE', !outArr)

!file.close()

$!ce
